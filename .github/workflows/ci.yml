# .github/workflows/publish-wispe-react.yml
name: Publish Wispe React

permissions:
  contents: write # needed for pushing tags & creating releases

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Override release tag (also becomes Git tag; defaults to v<package.json version>)"
        required: false

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout with full history so we can tag & release
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2) Read version from package.json
      - name: Get wispe-react version
        id: get_version
        run: |
          VERSION=$(jq -r '.version' packages/wispe-react/package.json)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      # 3) Determine the tag name
      - name: Determine tag name
        id: determine_tag
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "TAG=v${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          fi

      # 4) Create & push Git tag if it doesn't exist
      - name: Create Git tag if missing
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=${{ steps.determine_tag.outputs.TAG }}
          if ! git rev-parse "$TAG" >/dev/null 2>&1; then
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor }}@users.noreply.github.com"
            git tag "$TAG"
            git push origin "$TAG"
            echo "✔️ Created and pushed Git tag $TAG"
          else
            echo "ℹ️ Git tag $TAG already exists, skipping"
          fi

      # 5) Create a GitHub Release for that tag
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.determine_tag.outputs.TAG }}
          release_name: ${{ steps.determine_tag.outputs.TAG }}
          draft: false
          prerelease: false

      # 6) Set up Node 22 & authenticate to npm (no token in logs)
      - name: Set up Node.js & authenticate
        uses: actions/setup-node@v3
        with:
          node-version: "22.x"
          registry-url: "https://registry.npmjs.org"
          always-auth: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # 7) Install deps, build, and publish
      - name: Install dependencies
        run: npm ci

      - name: Build wispe-react
        run: npx nx build wispe-react

      - name: Publish to npm
        working-directory: packages/wispe-react/dist
        run: |
          TAG=${{ steps.determine_tag.outputs.TAG }}
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            echo "Publishing to npm with tag '$TAG'"
            npm publish --tag "$TAG"
          else
            echo "Publishing to npm with default tag (latest)"
            npm publish
          fi
